{"version":3,"sources":["container/Modal.js","components/tile.js","container/bingo.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","state","isVisible","this","show","dialog","showModal","close","nextProps","visible","hide","props","className","ref","children","React","Component","Tile","id","onToggle","isSet","onClick","bbb","BingoGame","useState","checked","setState","isOpen","setOpen","handleClose","value","handleOpen","Object","keys","map","won","range","undefined","find","row","every","column","index","isWon","toggle","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83fe5bbe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Modal extends React.Component {\r\n  constructor () {\r\n    super();\r\n\r\n    this.state = {\r\n      isVisible: false\r\n    };\r\n  }\r\n  componentDidMount () {\r\n    if (this.state.isVisible) {\r\n      this.show();\r\n    }\r\n  }\r\n  show () {\r\n    this.state.isVisible = true;\r\n    this.dialog.showModal();\r\n  }\r\n  hide () {\r\n    this.state.isVisible = false;\r\n    this.dialog.close();\r\n  }\r\n  componentWillReceiveProps (nextProps) {\r\n    if (nextProps.visible !== this.state.isVisible) {\r\n      this.state.isVisible = nextProps.visible;\r\n\r\n      if (this.state.isVisible) {\r\n        this.show();\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  }\r\n  render () {\r\n    this.state.isVisible = this.props.visible;\r\n\r\n    return (\r\n      <dialog className=\"dialog\" ref={(ref) => this.dialog = ref}>\r\n        {this.props.children}\r\n      </dialog>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Modal;\r\n","\r\nexport default function Tile({ id, children, onToggle, isSet }) {\r\n  return (\r\n    <div onClick={onToggle} className={`tile ${isSet ? \"tile--set\" : \"\"}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\"\r\nimport Tile from \"../components/tile\"\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\nconst bbb = [\r\n  \"0  (child noises in the background)\",\r\n  \"1  Hello, hello\",\r\n  \"2  I need to jump another call\",\r\n  \"3  can everyone go on mute\",\r\n  \"4  could you please get closer to the mic\",\r\n  \"5  (loud painful echo/ feedback)\",\r\n  \"6  Next slide please\",\r\n  \"7  can we take this offline?\",\r\n  \"8  is ___ on the call?\",\r\n  \"9  could you share the slides afterwards?\",\r\n  \"10 can somebody grant presenter rights?\",\r\n  \"11 can you email that to everyone?\",\r\n  \" CONF CALL BINGO\",\r\n  \"13 sorry I had a problems loging in\",\r\n  \"14 (animal noises in the background)\",\r\n  \"15 sorry I didn't found  the conference id\",\r\n  \"16 i was having connection issue \",\r\n  \"17 i will have to get back to you\",\r\n  \"18 who just joined?\",\r\n  \"19 sorry something ___ with my calender\",\r\n  \"20 do you see any screen?\",\r\n  \"21 let wait for__ !\",\r\n  \"22 you will send the minutes?\",\r\n  \"23 sorry I was on the mute\",\r\n  \"24 can you repeat please?\"\r\n];\r\n\r\n\r\nfunction BingoGame() {\r\n  const [state, setState] = useState({ checked: {} });\r\n  const [isOpen,setOpen] = useState(false)\r\n  const isWon = checked => {\r\n    const range = [0, 1, 2, 3, 4];\r\n    return (\r\n      undefined !==\r\n      range.find(row => range.every(column => checked[row * 5 + column])) ||\r\n      undefined !==\r\n      range.find(column => range.every(row => checked[row * 5 + column])) ||\r\n      range.every(index => checked[index * 5 + index]) ||\r\n      range.every(index => checked[index * 5 + 4 - index])\r\n    );\r\n  };\r\n  const toggle = id =>\r\n    setState(state => {\r\n      const checked = { ...state.checked, [id]: !state.checked[id] };\r\n      const won = isWon(checked);\r\n      won? handleOpen(true):handleClose(false)\r\n      return {\r\n        ...state,\r\n        checked,\r\n        won\r\n      };\r\n    });\r\n\r\n  const handleClose = value =>{\r\n    setOpen(value)\r\n  }\r\n  const handleOpen = value => {\r\n    setOpen(value)\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Bingo</h1>\r\n      <div className=\"wrapper\">\r\n        {Object.keys(bbb).map(id => (\r\n          <Tile\r\n            key={id}\r\n            id={id}\r\n            isSet={!!state.checked[id]}\r\n            onToggle={() => toggle(id)}\r\n          >\r\n            {bbb[id]}\r\n          </Tile>\r\n        ))}\r\n      </div>\r\n      {state.won ?\r\n                <Modal visible={isOpen} >\r\n                  <h3 className=\"dialog__title\">\r\n                    Win\r\n                  </h3>\r\n                  <p className=\"dialog__txt\">\r\n                    Congratulation You Win the Game!\r\n                  </p>\r\n                  <button onClick={() => handleClose(false)} type=\"button\" className=\"btn btn--close dialog__btn\">\r\n                    Close\r\n                  </button>\r\n                </Modal>\r\n          : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BingoGame;\r\n\r\n","import BingoGame from \"./container/bingo\";\n\nfunction App() {\n  return (\n          <BingoGame/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}